簡易仕様書
作者
有馬 孝太朗

アプリ名
Hotpepper Gourmet Finder

■ コンセプト
現在地または指定地域から、食べたいジャンルのお店をすばやく探せるレストラン検索アプリ。

■ こだわったポイント
ホットペッパーAPIの地域（地方→都道府県→市区）に対応した3段階セレクトボックスを導入。

Bootstrapによるカード型UI、落ち着いたデザイン。

現在地取得による位置情報ベースの検索と、エリア選択ベースの検索を両立。

ユーザーが戻って条件を再編集しやすい画面設計。

■ 動作対象環境
OS：Windows 10 / macOS 13 以上

ブラウザ：Google Chrome (v123.0以降), Microsoft Edge, Firefox 最新版推奨

■ 開発環境
言語：Python 3.11

ライブラリ：Flask 2.2.5, requests 2.31

テンプレート：Jinja2

フロントエンド：HTML / CSS / Bootstrap 5.3.2 / JavaScript

バージョン管理：Git

■ 開発期間
5日間（修正・テスト含む）

■ 機能一覧
現在地からのレストラン検索（Geolocation API）

地域（地方→都道府県→市区）選択による検索

ジャンルやキーワードによる絞り込み

緯度・経度・検索範囲による半径検索

検索結果の一覧表示（サムネイル、エリア、ジャンル、予算）

詳細ページリンク（ホットペッパーサイトへ）

店舗詳細画面（住所・営業時間・画像・電話・地図リンク）

■ 使用API
ホットペッパーグルメサーチAPI（v1）
https://webservice.recruit.co.jp/hotpepper/gourmet/v1/

■ フレームワーク・ライブラリ
Flask 2.2.5

Bootstrap 5.3.2

JavaScript（ES6+）

■ テーブル定義（ER図）
外部API連携のため内部DBなし

今後、検索履歴やお気に入り機能を追加する場合はSQLiteを導入予定

■ 開発環境構築手順
bash
コピーする
編集する
# 仮想環境作成（任意）
python -m venv venv
source venv/bin/activate  # Windowsの場合は venv\Scripts\activate

# 必要パッケージのインストール
pip install flask requests python-dotenv

# 実行
python app.py
# ブラウザで http://localhost:5000 を開く
■ 今後実装すべき機能
検索結果のページング対応（現在は10件固定）

市区選択時に緯度経度を完全に除外するロジックの調整

ローディング中のインジケータ追加

お気に入り機能（ログイン不要のLocalStorage対応予定）

■ 技術面でアドバイスを受けたい点
地域選択と緯度経度の優先順位の制御が正しく動作しているか

JavaScript側の無効化処理とサーバ側の判定に冗長がないか